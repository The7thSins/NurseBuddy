
// ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
class IVCalculator {
  // 1. ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å drop/min ‡πÄ‡∏õ‡πá‡∏ô cc/hr
  static dropPerMinToCcPerHr(dropPerMin, dropFactor) {
    if (!dropPerMin || !dropFactor) return 0;
    return (dropPerMin * 60) / dropFactor;
  }

  // 2. ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å cc/hr ‡πÄ‡∏õ‡πá‡∏ô drop/min  
  static ccPerHrToDropPerMin(ccPerHr, dropFactor) {
    if (!ccPerHr || !dropFactor) return 0;
    return (ccPerHr * dropFactor) / 60;
  }

  // 3. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏à‡∏∞‡∏´‡∏°‡∏î (‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
  static calculateTimeToFinish(totalVolume, ccPerHr) {
    if (!totalVolume || !ccPerHr) return 0;
    return totalVolume / ccPerHr;
  }

  // 4. ‡∏™‡∏π‡∏ï‡∏£‡∏•‡∏±‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì drop/min
  static quickDropCalculation(ccPerHr, dropFactor) {
    if (dropFactor === 20) {
      return Math.round(ccPerHr / 3);
    } else if (dropFactor === 15) {
      return Math.round(ccPerHr / 4);
    } else if (dropFactor === 60) {
      // Micro set: ccPerHr = dropPerMin
      return Math.round(ccPerHr);
    } else {
      return this.ccPerHrToDropPerMin(ccPerHr, dropFactor);
    }
  }

  // 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:‡∏ô‡∏≤‡∏ó‡∏µ
  static formatTime(hours) {
    if (!hours) return "0 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 0 ‡∏ô‡∏≤‡∏ó‡∏µ";
    const wholeHours = Math.floor(hours);
    const minutes = Math.round((hours - wholeHours) * 60);
    return `${wholeHours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ`;
  }

  // 6. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏£‡∏ö‡∏ä‡∏∏‡∏î
  static calculateComplete(params) {
    const {
      dropPerMin,
      ccPerHr, 
      totalVolume,
      dropFactor = 20
    } = params;

    const result = {
      dropFactor: dropFactor,
      originalDropPerMin: dropPerMin || 0,
      originalCcPerHr: ccPerHr || 0,
      totalVolume: totalVolume || 0
    };

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
    if (dropPerMin && !ccPerHr) {
      result.calculatedCcPerHr = this.dropPerMinToCcPerHr(dropPerMin, dropFactor);
    } else if (ccPerHr && !dropPerMin) {
      result.calculatedDropPerMin = this.ccPerHrToDropPerMin(ccPerHr, dropFactor);
      result.quickDropPerMin = this.quickDropCalculation(ccPerHr, dropFactor);
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏à‡∏∞‡∏´‡∏°‡∏î
    const finalCcPerHr = result.calculatedCcPerHr || result.originalCcPerHr;
    if (totalVolume && finalCcPerHr) {
      result.timeToFinishHours = this.calculateTimeToFinish(totalVolume, finalCcPerHr);
      result.timeToFinishFormatted = this.formatTime(result.timeToFinishHours);
      
      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏´‡∏°‡∏î (‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏£‡∏¥‡∏á)
      const finishTime = new Date(Date.now() + (result.timeToFinishHours * 60 * 60 * 1000));
      result.estimatedFinishTime = finishTime.toLocaleString('th-TH');
    }

    return result;
  }

  // 7. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•‡∏õ‡∏Å‡∏ï‡∏¥
  static checkFlowRate(ccPerHr, patientWeight, fluidType = 'normal') {
    if (!ccPerHr || !patientWeight) return null;

    const mlPerKgPerHr = ccPerHr / patientWeight;

    let recommendation = '';
    let riskLevel = 'normal';
    
    if (fluidType === 'maintenance') {
      // ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
      if (mlPerKgPerHr < 1) {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ï‡πà‡∏≥ - ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏î‡∏ô‡πâ‡∏≥';
        riskLevel = 'low';
      } else if (mlPerKgPerHr > 4) {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡∏π‡∏á - ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏†‡∏≤‡∏ß‡∏∞‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏¥‡∏ô';
        riskLevel = 'high';
      } else {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô';
        riskLevel = 'normal';
      }
    } else {
      if (mlPerKgPerHr > 10) {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å - ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß';
        riskLevel = 'critical';
      } else if (mlPerKgPerHr > 5) {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á - ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î';
        riskLevel = 'moderate';
      } else {
        recommendation = '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏Å‡∏ï‡∏¥';
        riskLevel = 'normal';
      }
    }

    return {
      mlPerKgPerHr: mlPerKgPerHr.toFixed(2),
      recommendation: recommendation,
      riskLevel: riskLevel
    };
  }

  // 8. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Drop Factor ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  static detectDropFactor(ccPerHr, observedDropPerMin) {
    if (!ccPerHr || !observedDropPerMin) return null;
    
    const calculatedFactor = (observedDropPerMin * 60) / ccPerHr;
    
    // ‡∏´‡∏≤ Drop Factor ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    const commonFactors = [10, 15, 20, 60];
    let closest = commonFactors[0];
    let minDiff = Math.abs(calculatedFactor - closest);
    
    for (let factor of commonFactors) {
      const diff = Math.abs(calculatedFactor - factor);
      if (diff < minDiff) {
        minDiff = diff;
        closest = factor;
      }
    }
    
    return {
      calculated: calculatedFactor.toFixed(1),
      recommended: closest,
      accuracy: ((1 - minDiff / calculatedFactor) * 100).toFixed(1)
    };
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠ (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß)
function createAdvancedIVCalculatorUI() {
  return `
    <div class="iv-calculator">
      <h3>ü©∫ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á</h3>

      <div class="calc-section">
        <h4>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</h4>
        <div class="input-group">
          <label>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (cc/ml):</label>
          <input type="number" id="totalVolume" placeholder="‡πÄ‡∏ä‡πà‡∏ô 1000" min="1">
        </div>

        <div class="input-group">
          <label>Drop Factor (‡∏´‡∏¢‡∏î/cc):</label>
          <select id="dropFactor">
            <option value="10">10 ‡∏´‡∏¢‡∏î/cc (‡πÄ‡∏î‡πá‡∏Å)</option>
            <option value="15">15 ‡∏´‡∏¢‡∏î/cc</option>
            <option value="20" selected>20 ‡∏´‡∏¢‡∏î/cc (‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô)</option>
            <option value="60">60 ‡∏´‡∏¢‡∏î/cc (Micro set)</option>
          </select>
        </div>

        <div class="input-group">
          <label>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ (kg) - ‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö:</label>
          <input type="number" id="patientWeight" placeholder="‡πÄ‡∏ä‡πà‡∏ô 70" min="1">
        </div>

        <div class="input-group">
          <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠:</label>
          <select id="fluidType">
            <option value="normal">‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
            <option value="maintenance">‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô</option>
            <option value="resuscitation">‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï</option>
          </select>
        </div>
      </div>

      <div class="calc-section">
        <h4>‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á</h4>
        <div class="input-group">
          <label>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏î (‡∏´‡∏¢‡∏î/‡∏ô‡∏≤‡∏ó‡∏µ):</label>
          <input type="number" id="dropPerMin" placeholder="‡πÄ‡∏ä‡πà‡∏ô 30" min="0">
        </div>

        <div class="or-divider">‡∏´‡∏£‡∏∑‡∏≠</div>

        <div class="input-group">
          <label>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏• (cc/hr):</label>
          <input type="number" id="ccPerHr" placeholder="‡πÄ‡∏ä‡πà‡∏ô 100" min="0">
        </div>
      </div>

      <div class="button-group">
        <button onclick="calculateAdvancedIV()" class="calc-button">‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</button>
        <button onclick="clearIVCalculator()" class="calc-button secondary">‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
        <button onclick="detectDropFactor()" class="calc-button info">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Drop Factor</button>
      </div>

      <div id="ivResults" class="results-section" style="display: none;">
        <h4>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</h4>
        <div id="resultsContent"></div>
      </div>

      <div id="safetyWarning" class="safety-warning" style="display: none;">
        <h4>‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</h4>
        <div id="warningContent"></div>
      </div>
    </div>
  `;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
function calculateAdvancedIV() {
  const totalVolume = parseFloat(document.getElementById('totalVolume').value) || 0;
  const dropFactor = parseInt(document.getElementById('dropFactor').value) || 20;
  const patientWeight = parseFloat(document.getElementById('patientWeight').value) || 0;
  const fluidType = document.getElementById('fluidType').value || 'normal';
  const dropPerMin = parseFloat(document.getElementById('dropPerMin').value) || 0;
  const ccPerHr = parseFloat(document.getElementById('ccPerHr').value) || 0;

  if (!dropPerMin && !ccPerHr) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•');
    return;
  }

  const result = IVCalculator.calculateComplete({
    dropPerMin,
    ccPerHr,
    totalVolume,
    dropFactor
  });

  let resultsHTML = `
    <div class="result-grid">
      <div class="result-item">
        <strong>Drop Factor:</strong> ${result.dropFactor} ‡∏´‡∏¢‡∏î/cc
      </div>
  `;

  if (result.calculatedCcPerHr) {
    resultsHTML += `
      <div class="result-item">
        <strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•:</strong> ${result.calculatedCcPerHr.toFixed(1)} cc/hr
      </div>
    `;
  }

  if (result.calculatedDropPerMin) {
    resultsHTML += `
      <div class="result-item">
        <strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏î:</strong> ${result.calculatedDropPerMin.toFixed(1)} ‡∏´‡∏¢‡∏î/‡∏ô‡∏≤‡∏ó‡∏µ
      </div>
    `;
  }

  if (result.quickDropPerMin) {
    resultsHTML += `
      <div class="result-item">
        <strong>‡∏™‡∏π‡∏ï‡∏£‡∏•‡∏±‡∏î:</strong> ${result.quickDropPerMin} ‡∏´‡∏¢‡∏î/‡∏ô‡∏≤‡∏ó‡∏µ
      </div>
    `;
  }

  if (result.timeToFinishFormatted) {
    resultsHTML += `
      <div class="result-item highlight">
        <strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏à‡∏∞‡∏´‡∏°‡∏î:</strong> ${result.timeToFinishFormatted}
      </div>
      <div class="result-item">
        <strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏´‡∏°‡∏î:</strong> ${result.estimatedFinishTime}
      </div>
    `;
  }

  resultsHTML += `</div>`;

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
  let warningHTML = '';
  if (patientWeight > 0) {
    const finalCcPerHr = result.calculatedCcPerHr || result.originalCcPerHr;
    const flowCheck = IVCalculator.checkFlowRate(finalCcPerHr, patientWeight, fluidType);
    if (flowCheck) {
      resultsHTML += `
        <div class="safety-check">
          <h5>‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</h5>
          <div class="result-item">
            <strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ï‡πà‡∏≠‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å:</strong> ${flowCheck.mlPerKgPerHr} ml/kg/hr
          </div>
          <div class="result-item ${flowCheck.riskLevel !== 'normal' ? 'warning' : 'safe'}">
            <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> ${flowCheck.recommendation}
          </div>
        </div>
      `;

      if (flowCheck.riskLevel === 'high' || flowCheck.riskLevel === 'critical') {
        warningHTML = `
          <div class="warning-item">
            ‚ö†Ô∏è ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
            <ul>
              <li>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å</li>
              <li>‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏´‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏≤‡∏¢‡πÉ‡∏à</li>
              <li>‡∏ö‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡πâ‡∏≤</li>
              <li>‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏≠‡∏≠‡∏Å‡∏ô‡πâ‡∏≠‡∏¢</li>
            </ul>
          </div>
        `;
      }
    }
  }

  document.getElementById('resultsContent').innerHTML = resultsHTML;
  document.getElementById('ivResults').style.display = 'block';

  if (warningHTML) {
    document.getElementById('warningContent').innerHTML = warningHTML;
    document.getElementById('safetyWarning').style.display = 'block';
  } else {
    document.getElementById('safetyWarning').style.display = 'none';
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Drop Factor
function detectDropFactor() {
  const ccPerHr = parseFloat(document.getElementById('ccPerHr').value) || 0;
  const dropPerMin = parseFloat(document.getElementById('dropPerMin').value) || 0;

  if (!ccPerHr || !dropPerMin) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏• (cc/hr) ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏î (‡∏´‡∏¢‡∏î/‡∏ô‡∏≤‡∏ó‡∏µ)');
    return;
  }

  const detection = IVCalculator.detectDropFactor(ccPerHr, dropPerMin);
  if (detection) {
    alert(`Drop Factor ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ: ${detection.calculated}\n‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ä‡πâ: ${detection.recommended} ‡∏´‡∏¢‡∏î/cc\n‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥: ${detection.accuracy}%`);
    document.getElementById('dropFactor').value = detection.recommended;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
function clearIVCalculator() {
  document.getElementById('totalVolume').value = '';
  document.getElementById('dropPerMin').value = '';
  document.getElementById('ccPerHr').value = '';
  document.getElementById('patientWeight').value = '';
  document.getElementById('dropFactor').selectedIndex = 2; // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà 20 ‡∏´‡∏¢‡∏î/cc
  document.getElementById('fluidType').selectedIndex = 0;
  document.getElementById('ivResults').style.display = 'none';
  document.getElementById('safetyWarning').style.display = 'none';
}

// CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö IV Calculator ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
const advancedIVCalculatorCSS = `
  .iv-calculator {
    background: linear-gradient(135deg, #f8fafc, #f1f5f9);
    padding: 25px;
    border-radius: 15px;
    margin: 20px 0;
    border: 1px solid #e2e8f0;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  }

  .calc-section {
    margin-bottom: 25px;
    padding: 20px;
    background: white;
    border-radius: 12px;
    border-left: 4px solid #0ea5e9;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  }

  .calc-section h4 {
    color: #1e293b;
    margin-bottom: 15px;
    font-size: 16px;
    font-weight: 600;
  }

  .input-group {
    margin-bottom: 15px;
  }

  .input-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #374151;
    font-size: 14px;
  }

  .input-group input, .input-group select {
    width: 100%;
    padding: 12px 15px;
    border: 2px solid #e5e7eb;
    border-radius: 10px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .input-group input:focus, .input-group select:focus {
    border-color: #0ea5e9;
    outline: none;
    box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
  }

  .or-divider {
    text-align: center;
    margin: 15px 0;
    color: #64748b;
    font-style: italic;
    position: relative;
  }

  .or-divider::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background: #e2e8f0;
    z-index: 1;
  }

  .or-divider span {
    background: white;
    padding: 0 15px;
    position: relative;
    z-index: 2;
  }

  .button-group {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }

  .calc-button {
    background: linear-gradient(135deg, #0ea5e9, #0284c7);
    color: white;
    border: none;
    padding: 14px 24px;
    border-radius: 10px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(14, 165, 233, 0.2);
  }

  .calc-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(14, 165, 233, 0.3);
  }

  .calc-button.secondary {
    background: linear-gradient(135deg, #64748b, #475569);
    box-shadow: 0 4px 15px rgba(100, 116, 139, 0.2);
  }

  .calc-button.info {
    background: linear-gradient(135deg, #8b5cf6, #7c3aed);
    box-shadow: 0 4px 15px rgba(139, 92, 246, 0.2);
  }

  .results-section {
    margin-top: 20px;
    padding: 20px;
    background: linear-gradient(135deg, #ecfdf5, #d1fae5);
    border-radius: 12px;
    border: 1px solid #22c55e;
  }

  .results-section h4 {
    color: #166534;
    margin-bottom: 15px;
  }

  .result-grid {
    display: grid;
    gap: 12px;
  }

  .result-item {
    padding: 12px 15px;
    background: white;
    border-radius: 8px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-left: 3px solid #0ea5e9;
  }

  .result-item.highlight {
    background: linear-gradient(135deg, #fff3cd, #ffeaa7);
    border-left-color: #f59e0b;
    font-weight: 600;
  }

  .result-item.warning {
    background: linear-gradient(135deg, #fee2e2, #fecaca);
    border-left-color: #ef4444;
    color: #991b1b;
  }

  .result-item.safe {
    background: linear-gradient(135deg, #d1fae5, #a7f3d0);
    border-left-color: #22c55e;
    color: #166534;
  }

  .safety-check {
    margin-top: 20px;
    padding: 15px;
    background: rgba(59, 130, 246, 0.05);
    border-radius: 10px;
    border: 1px solid rgba(59, 130, 246, 0.2);
  }

  .safety-check h5 {
    color: #1e40af;
    margin-bottom: 10px;
    font-size: 14px;
  }

  .safety-warning {
    margin-top: 20px;
    padding: 20px;
    background: linear-gradient(135deg, #fef2f2, #fee2e2);
    border-radius: 12px;
    border: 1px solid #ef4444;
  }

  .safety-warning h4 {
    color: #991b1b;
    margin-bottom: 15px;
  }

  .warning-item {
    color: #991b1b;
    line-height: 1.6;
  }

  .warning-item ul {
    margin-top: 10px;
    padding-left: 20px;
  }

  .warning-item li {
    margin-bottom: 5px;
  }

  @media (max-width: 768px) {
    .button-group {
      flex-direction: column;
    }
    
    .calc-button {
      width: 100%;
    }
    
    .result-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 5px;
    }
  }
`;

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏•‡∏á‡πÉ‡∏ô head
if (typeof document !== 'undefined') {
  const existingStyle = document.querySelector('#iv-calculator-style');
  if (existingStyle) {
    existingStyle.remove();
  }
  
  const style = document.createElement('style');
  style.id = 'iv-calculator-style';
  style.textContent = advancedIVCalculatorCSS;
  document.head.appendChild(style);
}

// Export ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { IVCalculator, createAdvancedIVCalculatorUI, calculateAdvancedIV };
}
